{"version":3,"sources":["jsFiles/Letter.js","jsFiles/helperFunc.js","jsFiles/MusicNote.js","components/SideBar.js","components/MainCanvas.js","components/CanvasBar.js","App.js","serviceWorker.js","index.js"],"names":["Letter","c","x","y","hitColor","text","sizeScale","id","this","fontSize","fontFamily","font","color","hit","grow","originalSize","displayText","toUpperCase","fillStyle","fillText","fill","draw","randomIntFromRange","min","max","Math","floor","random","letterToColor","a","b","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","z","keyCodeToLetter","48","49","50","51","52","53","54","55","56","57","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","188","songs","furElise","noSongSelected","letterToPiano","2","3","5","6","7","9","0","comma","MusicNote","dx","dy","letter","width","height","first","noteImage","Image","onload","drawImage","src","slice","SideBar","document","querySelector","window","addEventListener","currNoteIndex","currentSongName","dropBtn","songNameCode","getSongNameCode","songName","result","toLowerCase","length","notesBox","updateNotesBox","innerHTML","notesBoxLetterId","notesList","outside","all_a","querySelectorAll","textContent","props","notifySongChange","event","letterPressed","keyCode","style","className","href","Component","MainCanvasClass","state","changed","newSong","songNoteIndex","mainCanvas","innerWidth","innerHeight","getContext","centerImage","centerImageWidth","centerImageHeight","centerImageX","centerImageY","allLetter","scale","currentLetter","undefined","allCorrectNotes","allIncorrectNotes","createCorrectNote","pathLength","x1","y1","x2","y2","xDist","yDist","sqrt","pow","distance","musicNote","push","playNote","filePath","sound","Howl","volume","play","obj","seconds","callInterval","perDecrease","key","interval","setInterval","setTimeout","clearInterval","decreaseVolumeGradually","withinRange","note","range","noteCenterX","noteCenterY","inRangeX","inRangeY","noteNotOnScreen","createIncorrectNote","animate","clearRect","update","index","indexOf","splice","indexLetter","currentNote","pixelsFromEdge","awayFromCenter","letterX","letterY","actualText","requestAnimationFrame","icon","faMusic","CanvasBar","refs","MainCanvas","songChange","ref","React","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4b13f53.chunk.js","sourcesContent":["class Letter {\r\n    constructor(c, x, y, hitColor, text, sizeScale, id){\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.fontSize = sizeScale * 0.05;\r\n        this.fontFamily = \"Impact\";\r\n        this.font = this.fontSize + \"pt \" + this.fontFamily;\r\n        this.text = text;\r\n        this.hitColor = hitColor; // color will change to after it's hit\r\n        this.color = \"white\"; // start out as white, will change to input color later\r\n        this.c = c;\r\n        this.id = id; //Used to know if a shot out note is meant to hit this letter\r\n        this.hit = false; //Did a note hit this yet\r\n\r\n        this.grow = true;\r\n        this.originalSize = this.fontSize;\r\n\r\n        this.displayText = text.toUpperCase();\r\n        if (this.displayText === \"COMMA\"){\r\n            this.displayText = \",\";\r\n        }\r\n        \r\n    }\r\n\r\n    draw () {\r\n        this.c.font = this.font;\r\n\r\n        this.c.fillStyle = this.color;\r\n        \r\n\r\n        this.c.fillText(this.displayText, this.x, this.y);\r\n        this.c.fill();\r\n    }\r\n\r\n    update(){\r\n        this.draw ();\r\n\r\n        if (this.hit){\r\n            this.color = this.hitColor;\r\n\r\n            if (this.grow){\r\n                this.fontSize += 5;\r\n                this.font = this.fontSize + \"pt \" + this.fontFamily;\r\n                if (this.fontSize >= (this.originalSize + (this.originalSize * 0.5))){\r\n                    this.grow = false;\r\n                }\r\n\r\n            }else{\r\n                this.fontSize -= 3;\r\n                this.font = this.fontSize + \"pt \" + this.fontFamily;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport { Letter };\r\n","function randomIntFromRange(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nfunction randomColor(colors) {\r\n    return colors[Math.floor(Math.random() * colors.length)]\r\n}\r\n\r\nfunction distance(x1, y1, x2, y2) {\r\n    const xDist = x2 - x1\r\n    const yDist = y2 - y1\r\n  \r\n    return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\r\n}\r\n\r\nvar letterToColor = {\r\n    \"0\": \"#EB4E4F\",\r\n    \"1\": \"#5DC4E8\",\r\n    \"2\": \"#E8725D\",\r\n    \"3\": \"#BE73FF\",\r\n    \"4\": \"#73FF66\",\r\n    \"5\": \"#FFE282\",\r\n    \"6\": \"#EB4E4F\",\r\n    \"7\": \"#5DC4E8\",\r\n    \"8\": \"#E8725D\",\r\n    \"9\": \"#BE73FF\",\r\n\r\n    a: \"#5DC4E8\",\r\n    b: \"#E8725D\",\r\n    c: \"#BE73FF\",\r\n    d: \"#73FF66\",\r\n    e: \"#FFE282\",\r\n    f: \"#EB4E4F\",\r\n    \r\n    g: \"#5DC4E8\",\r\n    h: \"#E8725D\",\r\n    i: \"#BE73FF\",\r\n    j: \"#73FF66\",\r\n    k: \"#FFE282\",\r\n    l: \"#EB4E4F\",\r\n\r\n    m: \"#5DC4E8\",\r\n    n: \"#E8725D\",\r\n    o: \"#BE73FF\",\r\n    p: \"#73FF66\",\r\n    q: \"#FFE282\",\r\n    r: \"#EB4E4F\",\r\n\r\n    s: \"#5DC4E8\",\r\n    t: \"#E8725D\",\r\n    u: \"#BE73FF\",\r\n    v: \"#73FF66\",\r\n    w: \"#FFE282\",\r\n    x: \"#EB4E4F\",\r\n\r\n    y: \"#5DC4E8\",\r\n    z: \"#E8725D\",\r\n    \"comma\": \"#E8725D\"\r\n}\r\n\r\n// go from event (code) --> get the letter --> use the letter get the color\r\nvar keyCodeToLetter = {\r\n    48:\"0\",\r\n    49:\"1\",\r\n    50:\"2\",\r\n    51:\"3\",\r\n    52:\"4\",\r\n    53:\"5\",\r\n    54:\"6\",\r\n    55:\"7\",\r\n    56:\"8\",\r\n    57:\"9\",\r\n\r\n    65: \"a\",\r\n    66: \"b\",\r\n    67: \"c\",\r\n    68: \"d\",\r\n    69: \"e\",\r\n    70: \"f\",\r\n    71: \"g\",\r\n    72: \"h\",\r\n    73: \"i\",\r\n    74: \"j\",\r\n    75: \"k\",\r\n    76: \"l\",\r\n    77: \"m\",\r\n    78: \"n\",\r\n    79: \"o\",\r\n    80: \"p\",\r\n    81: \"q\",\r\n    82: \"r\",\r\n    83: \"s\",\r\n    84: \"t\",\r\n    85: \"u\",\r\n    86: \"v\",\r\n    87: \"w\",\r\n    88: \"x\",\r\n    89: \"y\",\r\n    90: \"z\",\r\n\r\n    188: \"comma\"\r\n}\r\n\r\nvar keyNumLetter = {\r\n    \r\n    13: \"q\",\r\n    14: \"2\",\r\n    15: \"w\",\r\n    16: \"3\",\r\n    17: \"e\",\r\n    18: \"r\",\r\n    19: \"5\",\r\n    20: \"t\",\r\n    21: \"6\",\r\n    22: \"y\",\r\n    23: \"7\",\r\n    24: \"u\",\r\n    25: \"i\",\r\n    26: \"9\",\r\n    27: \"o\",\r\n    28: \"0\",\r\n    29: \"p\",\r\n\r\n    30: \"z\",\r\n    31: \"s\",\r\n    32: \"x\",\r\n    33: \"d\",\r\n    34: \"c\",\r\n    35: \"f\",\r\n    36: \"v\",\r\n    37: \"b\",\r\n    38: \"h\",\r\n    39: \"n\",\r\n    40: \"j\",\r\n    41: \"m\",\r\n}\r\n\r\nvar songs = {\r\n    furElise : ['e','m','j','m','j','m','v','n','b','c','e','y','i','p','c','v',\r\n                'e','y','i','p','c','b','e','e','e','m','j','m','j','m','v','n','b',\r\n                'c','v','b','n','m','i','x',',','m','n','t','u','x','m','n','b','e',\r\n                'e', 'e', 'm', 'j', 'm','j','m','v','n','b','c'],\r\n    \r\n    noSongSelected : []\r\n}\r\n\r\nvar letterToPiano = {\r\n    \r\n    2:\"piano_c3_sharp\",\r\n    3:\"piano_d3_sharp\",\r\n    \r\n    5:\"piano_f3_sharp\",\r\n    6:\"piano_g3_sharp\",\r\n    7:\"piano_a3_sharp\",\r\n    \r\n    9:\"piano_c4_sharp\",\r\n    0:\"piano_d4_sharp\",\r\n\r\n    b: \"piano_c5\",\r\n    c: \"piano_a4\",\r\n    d: \"piano_g4_sharp\",\r\n    e: \"piano_e3\",\r\n    f: \"piano_a4_sharp\",\r\n\r\n    h: \"piano_c5_sharp\",\r\n    i: \"piano_c4\",\r\n    j: \"piano_d5_sharp\",\r\n\r\n    l: \"piano_f5_sharp\",\r\n\r\n    m: \"piano_e5\",\r\n    n: \"piano_d5\",\r\n    o: \"piano_d4\",\r\n    p: \"piano_e4\",\r\n    q: \"piano_c3\",\r\n    r: \"piano_f3\",\r\n\r\n    s: \"piano_f4_sharp\",\r\n    t: \"piano_g3\",\r\n    u: \"piano_b3\",\r\n    v: \"piano_b4\",\r\n    w: \"piano_d3\",\r\n    x: \"piano_g4\",\r\n\r\n    y: \"piano_a3\",\r\n    z: \"piano_f4\",\r\n\r\n    comma: \"piano_f5\"\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport {randomIntFromRange, randomColor, distance, letterToColor, keyCodeToLetter, letterToPiano, songs};","class MusicNote {\r\n    constructor(c, x, y, dx, dy, letter, width, color, id){\r\n        this.c = c;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.dx = dx;\r\n        this.dy = dy;\r\n        this.letter = letter;\r\n        this.color = color;\r\n        this.width = width;\r\n        this.height = this.width * 2;\r\n        this.first = true;\r\n        this.id = id;\r\n\r\n        // Associate this with an image\r\n        this.noteImage = new Image();\r\n\r\n        // inside the onload function this, refers to noteImage (new image object) NOT MusicNote\r\n        // so gotta set the this.c to another variable to be called in the onload method\r\n\r\n        this.noteImage.onload = function () {\r\n            c.drawImage(this, x, y, width, width*2); \r\n            // Can't use 'this.x this.y etc' in function because 'this' refers to noteImage NOT MusicNote\r\n        }\r\n        this.noteImage.src = \"./images/note\" + this.color.slice(1) + \".png\";\r\n    }\r\n\r\n    draw () {\r\n        this.c.drawImage(this.noteImage, this.x, this.y, this.width, this.width * 2);        \r\n    }\r\n\r\n    update(){\r\n        this.x += this.dx;\r\n        this.y += this.dy;\r\n        this.draw ();\r\n    }\r\n\r\n}\r\n\r\nexport default MusicNote;","import React, {Component} from \"react\";\r\nimport {randomIntFromRange, distance, letterToColor, keyCodeToLetter, letterToPiano, songs} from \"../jsFiles/helperFunc\";\r\nclass SideBar extends Component {\r\n\r\n    componentDidMount(){\r\n        var mainCanvas = document.querySelector('#mainCanvas');\r\n        var sideBar = document.querySelector('#SideBar');\r\n\r\n        // sideBar.style.width = (window.innerWidth - mainCanvas.width - 20) + \"px\";\r\n            // 20px cus sometimes we have the scroll bar on right and that takes ~20px\r\n        // sideBar.style.height = window.innerHeight + \"px\";\r\n\r\n        function updateSideBarSize(){\r\n\r\n            // sideBar.style.width = (window.innerWidth - mainCanvas.width - 20) + \"px\";\r\n            // // 20px cus sometimes we have the scroll bar on right and that takes ~20px\r\n            // sideBar.style.height = window.innerHeight + \"px\";\r\n        }\r\n\r\n        window.addEventListener('resize', function(){\r\n            // function called every time window 'resizes'\r\n            updateSideBarSize();   \r\n        })\r\n        updateSideBarSize();\r\n        var currentSongName = document.querySelector(\"#currentSongName\");\r\n        var dropBtn = document.querySelector(\".dropbtn\");\r\n        \r\n        var songNameCode = \"noSongSelected\";\r\n\r\n        function getSongNameCode(songName){\r\n            // Returns input with first letter becomming lower case, and removed all spaces\r\n            var result = songName[0].toLowerCase();\r\n            for (var i = 1; i < songName.length; i++){\r\n                if (songName[i] !== \" \"){\r\n                    result += songName[i];\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        var currNoteIndex;\r\n        var notesBox = document.querySelector(\".notesBox\");\r\n\r\n        function updateNotesBox(notesBox, songNameCode){\r\n            currNoteIndex = 0;\r\n            notesBox.innerHTML = \"\";\r\n            var notesBoxLetterId = 0;\r\n            var notesList = songs[songNameCode];\r\n            if (notesList.length < 1){\r\n                return 1;\r\n            }\r\n            \r\n            for (var i =0; i < notesList.length; i ++){\r\n                notesBox.innerHTML += '<span id=\"' + \"n\" + notesBoxLetterId  + '\">' + notesList[notesBoxLetterId] + \" \" + \"</span>\"\r\n                // id of each span is \"n#\" where # is the index of that letter in the song list\r\n                notesBoxLetterId += 1;\r\n            }\r\n        }\r\n        var outside = this;\r\n\r\n        var all_a = document.querySelectorAll(\".listSongs\");\r\n        for (var i=0; i < all_a.length; i++){\r\n            all_a[i].addEventListener(\"click\", function(){\r\n                currentSongName.textContent = this.textContent;\r\n                dropBtn.textContent = this.textContent;\r\n                songNameCode = getSongNameCode(this.textContent);\r\n                updateNotesBox(notesBox, songNameCode);\r\n                currNoteIndex = 0;\r\n                outside.props.notifySongChange(songNameCode);\r\n                \r\n            })\r\n        }\r\n        \r\n        // Add Keyboard event listener\r\n        function keydownUpdateNotesBox(event){\r\n            var letterPressed =  keyCodeToLetter[event.keyCode];\r\n            if (letterPressed == \"comma\"){\r\n                letterPressed = \",\";\r\n            }\r\n            \r\n            if ((event.keyCode in keyCodeToLetter) && songs[songNameCode][currNoteIndex] == letterPressed){\r\n                var currNotesBoxLetter = document.querySelector(\"#n\" + currNoteIndex);\r\n                currNotesBoxLetter.style.color = \"black\";\r\n                currNoteIndex ++;\r\n            }\r\n        }\r\n        window.addEventListener('keydown', keydownUpdateNotesBox ,false);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div id=\"SideBar\">\r\n            <h1 id=\"currentSongName\" className=\"headings\">No Song Selected</h1>\r\n            <div className = \"notesBox\">\r\n            </div>\r\n            \r\n            <h1 className=\"headings\">Choose a Song</h1>\r\n\r\n            <div className=\"dropdown\">\r\n                <button className=\"dropbtn\">No Song Selected</button>\r\n                \r\n                    <div className=\"dropdown-content\">\r\n                        <a href=\"#\" className = \"listSongs\">No Song Selected</a>\r\n                        <a href=\"#\" className = \"listSongs\">Fur Elise</a>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, {Component} from \"react\";\r\nimport { Letter } from \"../jsFiles/Letter\";\r\nimport {randomIntFromRange, distance, letterToColor, keyCodeToLetter, letterToPiano, songs} from \"../jsFiles/helperFunc\";\r\nimport MusicNote from \"../jsFiles/MusicNote\";\r\nimport {Howl, Howler} from 'howler';\r\nimport SideBar from './SideBar';\r\n// Had to do npm install react-howler\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass MainCanvasClass extends Component {\r\n\r\n    state = {\r\n        songName : \"noSongSelected\",\r\n        changed : false\r\n    }\r\n\r\n    songChange(newSong){\r\n        this.state.songName = newSong;\r\n        this.state.changed = true;\r\n    }\r\n\r\n    componentDidMount(){\r\n        var songName = this.state.songName;\r\n        var songNoteIndex = 0;\r\n        var outside = this;\r\n\r\n        var mainCanvas = document.querySelector('#mainCanvas');\r\n\r\n        var reduceFactor = 0.28;\r\n        mainCanvas.width = window.innerWidth - (window.innerWidth * reduceFactor); // 0.23\r\n        mainCanvas.height = window.innerHeight - (window.innerHeight * reduceFactor);\r\n        \r\n        // function updateCanvasSize (mainCanvas, window){\r\n        //     // I put mainCanvas / window as input so I can put this function\r\n        //     // in helperFunc.js later\r\n        //     // var reduceFactor = 0.28;\r\n        //     // mainCanvas.width = window.innerWidth - (window.innerWidth * reduceFactor); // 0.23\r\n        //     // mainCanvas.height = window.innerHeight - (window.innerHeight * reduceFactor);\r\n        // }\r\n\r\n        // updateCanvasSize(mainCanvas, window);\r\n\r\n        var c = mainCanvas.getContext('2d');\r\n        \r\n        var centerImage = new Image();\r\n        var centerImageWidth = window.innerWidth;\r\n        var centerImageHeight = window.innerHeight;\r\n        var centerImageX = mainCanvas.width/2 - centerImageWidth/2;\r\n        var centerImageY = mainCanvas.height/2 - centerImageHeight/2;\r\n        // var scale = window.innerWidth / window.innerHeight;\r\n        var allLetter = [];\r\n        \r\n        \r\n        \r\n        var scale = mainCanvas.width + mainCanvas.height;\r\n\r\n        \r\n        // window.addEventListener('resize', function(){\r\n        //     // function called every time window 'resizes'\r\n        //     // updateCanvasSize(mainCanvas, window);\r\n        //     scale = mainCanvas.width + mainCanvas.height;\r\n        // })\r\n\r\n\r\n        centerImage.onload = function(){\r\n            c.drawImage(centerImage,centerImageX,centerImageY, centerImageWidth, centerImageHeight);\r\n        }\r\n        centerImage.src = './images/pianoClear2.png'\r\n\r\n        function updateCenterImage(){\r\n            centerImageWidth = mainCanvas.width *0.145;\r\n            centerImageHeight = centerImageWidth;\r\n            centerImageX = mainCanvas.width/2 - centerImageWidth/2 + (mainCanvas.width * -0.01)\r\n            centerImageY = mainCanvas.height/2 - centerImageHeight/2 + (mainCanvas.height * 0.06);\r\n\r\n            c.drawImage(centerImage,centerImageX,centerImageY, centerImageWidth, centerImageHeight);\r\n        }\r\n\r\n        \r\n\r\n\r\n        // Center Image\r\n        \r\n        \r\n        \r\n        // Set onload THEN set src\r\n        // ---------------------------------------------------------------------------------------------------\r\n        \r\n        // Keyboard event listener\r\n\r\n        var currentLetter = undefined;\r\n        var allCorrectNotes = [];\r\n        var allIncorrectNotes = [];\r\n\r\n        function createCorrectNote(currentLetter){\r\n            var width = scale * 0.015;\r\n            var height = width * 2;\r\n            var x = (mainCanvas.width + width) / 2.0;\r\n            var y = (mainCanvas.height + height) / 2.0;\r\n\r\n            var pathLength = distance(currentLetter.x, currentLetter.y, (x + width / 2.0), (y + height / 2.0));\r\n            var speed = 4;\r\n            var dx = (currentLetter.x - (x + width / 2.0)) / (pathLength / speed);\r\n            var dy = (currentLetter.y - (y + height / 2.0)) / (pathLength / speed);\r\n            \r\n            var musicNote = new MusicNote(c, x, y, dx, dy, currentLetter.text, width, letterToColor[currentLetter.text], currentLetter.id);\r\n            allCorrectNotes.push(musicNote);\r\n            return musicNote;\r\n        }\r\n\r\n        function createIncorrectNote(letterPressed){\r\n            var width = scale * 0.015;\r\n            var height = width * 2;\r\n            // var x = centerImageX + centerImageWidth/2 -width/2;\r\n            var x = (mainCanvas.width + width) / 2.0;\r\n            var y = (mainCanvas.height + height) / 2.0;\r\n            \r\n            var dx = randomIntFromRange(-1,1);\r\n            var dy = randomIntFromRange(-4,4);\r\n            while (dy === 0 || dy === 1 || dy === -1){\r\n                dy = randomIntFromRange(-4,4);\r\n            }\r\n            \r\n            var musicNote = new MusicNote(c, x, y, dx, dy, letterPressed, width, letterToColor[letterPressed], -1);\r\n            allIncorrectNotes.push(musicNote);\r\n            return musicNote;\r\n        }\r\n\r\n        function decreaseVolumeGradually(obj, seconds){\r\n\r\n            var callInterval = seconds/10.0;\r\n            var perDecrease = obj.key.volume()/ 10.0;\r\n            // The more decrease calls I have the more smoothly the sound drops\r\n\r\n            var interval = setInterval(function(){\r\n                obj.key.volume(obj.key.volume() - perDecrease);\r\n            }, callInterval * 1000);\r\n            \r\n            var timer = setTimeout(function(){\r\n                clearInterval(interval);\r\n            }, seconds * 1000);\r\n        }\r\n\r\n        function playNote(s){\r\n            var fileName = letterToPiano[s];\r\n            var filePath =\"./sounds/\" + fileName + \".mp3\";\r\n            var sound = new Howl({\r\n                src:[filePath],\r\n                volume: 0.05\r\n            });\r\n            sound.play();\r\n            \r\n            // if I pass the sound obj directly the parameter will be alias to sound obj\r\n            // so changes won't be made to the actual object, this way its like passing in a list\r\n            // the items inside are mutable\r\n            var obj = {key: sound};\r\n            decreaseVolumeGradually(obj, 4);\r\n        }\r\n\r\n        function checkKeyDown(event){\r\n\r\n            var letterPressed =  keyCodeToLetter[event.keyCode];\r\n            \r\n            if(!(letterPressed in letterToPiano)){\r\n                //Do nothing for now (They typed a key with no associated sound)\r\n            }else if (currentLetter !== undefined && letterPressed === currentLetter.text){\r\n                createCorrectNote (currentLetter);\r\n                currentLetter.color = \"#d3d3d3\";\r\n                songNoteIndex += 1;\r\n                currentLetter = undefined;\r\n                \r\n            }else {\r\n                createIncorrectNote(letterPressed);\r\n            }\r\n\r\n            if (letterPressed in letterToPiano){\r\n                playNote(letterPressed);\r\n            }\r\n        }\r\n        window.addEventListener('keydown', checkKeyDown ,false);\r\n\r\n        function withinRange (note, letter, range){\r\n            var noteCenterX = note.x + (note.width/2.0);\r\n            var noteCenterY = note.y + (note.height/2.0);\r\n            var inRangeX = (noteCenterX >= letter.x - range) && (noteCenterX <= letter.x + range);\r\n            var inRangeY = (noteCenterY >= letter.y - range) && (noteCenterY <= letter.y + range);\r\n            \r\n            return inRangeX && inRangeY;\r\n        }\r\n\r\n        function noteNotOnScreen (note){\r\n            // remove incorrect notes the fly off edge\r\n            return (note.x + note.width < 0 || note.x > mainCanvas.width ||\r\n                 note.y + note.height < 0 || note.y > mainCanvas.height);\r\n        }\r\n\r\n        \r\n        function animate(){\r\n            \r\n            c.clearRect(0,0, mainCanvas.width, mainCanvas.height);\r\n            updateCenterImage();\r\n            var i;\r\n            // animate the correct notes\r\n\r\n            for (var k=0; k < allLetter.length; k++){\r\n                var letter = allLetter[k];\r\n                for (i=0; i < allCorrectNotes.length; i++){\r\n                    var note = allCorrectNotes[i];\r\n                    note.update();\r\n                    if (letter.id === note.id && withinRange(note, letter, letter.fontSize)){\r\n                        letter.hit = true;\r\n                        var index = allCorrectNotes.indexOf(note);\r\n                        if (index !== -1){\r\n                            allCorrectNotes.splice(index, 1);\r\n                        }                        \r\n                    }\r\n                }\r\n                if (letter.fontSize < 5){\r\n                    var indexLetter = allLetter.indexOf(letter);\r\n                    if (index !== -1){\r\n                        allLetter.splice(indexLetter, 1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // animate the incorrect notes\r\n            for (i = 0; i < allIncorrectNotes.length ; i++){\r\n                var currentNote = allIncorrectNotes[i];\r\n                currentNote.update();\r\n                \r\n                // remove incorrect notes the fly off edge\r\n                if(noteNotOnScreen(currentNote)){\r\n                    var index = allIncorrectNotes.indexOf(currentNote);\r\n                    allIncorrectNotes.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            if (songName !== \"noSongSelected\" && songNoteIndex < songs[songName].length){\r\n\r\n                var pixelsFromEdge = scale * 0.05;\r\n                var awayFromCenter = centerImageWidth * 0.2;\r\n\r\n                if (currentLetter === undefined){\r\n                    var letterX = randomIntFromRange(pixelsFromEdge, mainCanvas.width - pixelsFromEdge);\r\n                    var letterY = randomIntFromRange(pixelsFromEdge, mainCanvas.height - pixelsFromEdge);\r\n\r\n                    while ((letterX >= centerImageX - awayFromCenter) && (letterX <= centerImageX + centerImageWidth + awayFromCenter) &&\r\n                            (letterY >= centerImageY - awayFromCenter) && (letterY <= centerImageY + centerImageHeight + awayFromCenter)){\r\n\r\n                        letterX = randomIntFromRange(pixelsFromEdge, mainCanvas.width - pixelsFromEdge);\r\n                        letterY = randomIntFromRange(pixelsFromEdge, mainCanvas.height - pixelsFromEdge);\r\n                    }\r\n                    \r\n                    var text = songs[songName][songNoteIndex]; \r\n                    var id = songNoteIndex;\r\n\r\n                    var actualText = text;\r\n                    if (text === \",\"){\r\n                        text = \"comma\";\r\n                    }\r\n                    \r\n                    var color = letterToColor[actualText];\r\n\r\n                    currentLetter = new Letter(c, letterX, letterY, color, text, scale, id);\r\n                    allLetter.push(currentLetter);\r\n                }\r\n            }\r\n            var j;\r\n            for (j=0; j < allLetter.length; j++){\r\n                allLetter[j].update();\r\n            };\r\n            if (outside.state.changed){\r\n                songName = outside.state.songName;\r\n                songNoteIndex = 0;\r\n                allCorrectNotes = [];\r\n                allIncorrectNotes = [];\r\n                allLetter = [];\r\n                currentLetter = undefined;\r\n                outside.state.changed = false;\r\n            }\r\n            // Gradually reduce volume\r\n            requestAnimationFrame(animate);\r\n        }\r\n        animate();\r\n    }\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <div id=\"canvasDiv\">\r\n                <h1><span className=\"title\"><FontAwesomeIcon icon={ faMusic }/> Online Piano</span></h1>\r\n                <canvas id=\"mainCanvas\"></canvas>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainCanvasClass;\r\n","import React from 'react';\r\nimport MainCanvasClass from './MainCanvas.js';\r\nimport SideBar from './SideBar';\r\n\r\nclass CanvasBar extends React.Component{\r\n\r\n    notifySongChange = (newSong) => {\r\n        this.refs.MainCanvas.songChange(newSong);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <MainCanvasClass ref=\"MainCanvas\"/>\r\n                <SideBar notifySongChange={this.notifySongChange}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CanvasBar;","import React from 'react';\nimport './App.css';\n// import MainCanvasClass from './components/MainCanvas.js';\n// import SideBar from './components/SideBar';\nimport CanvasBar from './components/CanvasBar.js';\n\nfunction App() {\n\n  \n\n  return (\n    <div className = \"container\">\n      <CanvasBar/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}